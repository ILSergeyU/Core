package Java_pre_project;

public class Lesson2_1_1 {
}

/*Spring Framework (сокр. Spring) - фреймворк для разработки enterprise-приложений.
Spring позволяет создавать масштабируемые и легко поддерживаемые решения, что сильно ускоряет разработку.
Фреймворк имеет высокую модульность, каждый модуль способен запускаться и выполнять
свои задачи как самостоятельное приложение, либо же может использоваться в группе с
 другими модулями (фреймворки во фреймворке).
Функционал Спринга постоянно обновляется и дополняется, наиболее популярные модули
реализуют функционал MVC, работу с базой данных, секьюрность (безопасность) приложений,
обмен сообщениями, шаблонизаторы и многое другогое.

Как это работает.
Bean – это объект, управляемый Спрингом. В Спринге все будет бинами: и сервисы, и DAO, и контроллеры (группы сервлетов).
DI-контейнер - технология, держащая в себе бины и отвечающая за их связь. Например,
подтягивать DAO к сервису будет именно этот контейнер. Но вашим кодом это не ограничится,
контейнер позволит запускать различные модули без жесткой связи между собой, так в модуль
Security не потребуется передавать все контроллеры из модуля MVC, контейнер свяжет их неявно.
Контекст – это окружение, в котором запускается приложение. Их реализовано более десятка,
но чаще всего используется следующие три:

FileSystemXmlApplicationContext - xml-конфиг, раньше был распространен, сейчас устарел (после ввода аннотаций в java 1.6).
AnnotationConfigApplicationContext - современный контекст, основывается на аннотациях, изучать и использовать будем именно его.
StaticApplicationContext - переходный вариант, прямо в коде связываем бины, используется для тестирования.

И в обратную сторону: Контейнер + метаданные (настройки) образуют ваше приложение с контейнером, который и управляет бинами.*/