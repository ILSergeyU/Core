package Chapter2;

public class Lesson2_4_19 {
    public static void main(String[] args) {
        String[] roles = new String[]{
                "Городничий",
                "Аммос Федорович",
                "Артемий Филиппович",
                // "Лука",
                "Лука Лукич"
        };
        String[] textLines = new String[]{
                "Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.",
                "Аммос Федорович: Как ревизор?",
                "Артемий Филиппович: Как ревизор?",
                "Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.",
                "Аммос Федорович: Вот те на!",
                "Артемий Филиппович: Вот не было заботы, так подай!",
                "Лука Лукич: Господи боже! еще и с секретным предписаньем!",
                // "Лука: Господи боже! Я уронил своё пасхальное яйцо от неожиданности!"
        };
//        System.out.println(printTextPerRole(new String[]{"Городничий", "Аммос Федорович", "Артемий Филиппович", "Лука", "Лука Лукич"},
//                new String[]{"Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.", "Как ревизор?",
//                        "Как ревизор?", "Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.", "Вот те на!", "Вот не было заботы, так подай!",
//                        "Господи боже! еще и с секретным предписаньем!", "Господи боже! Я уронил своё пасхальное яйцо от неожиданности!"}));

        System.out.println(printTextPerRole(roles, textLines));

    }

    public static String printTextPerRole(String[] roles, String[] textLines) {
        //Твой код здесь
        StringBuilder answer = new StringBuilder();
        for (String role : roles) {
            // answer.append(role + ":\n");
            answer.append(role)
                    .append(":\n");
            for (int i = 0; i < textLines.length; i++) {
                if (textLines[i].startsWith(role + ":")) {
                    answer.append(i + 1)
                            .append(")")
                            .append(textLines[i].substring(role.length() + 1))
                            .append("\n");
                }
            }
            answer.append("\n");
        }
        return answer.toString();
    }


/*public static String printTextPerRole(String[] roles, String[] textLines) {
    StringBuilder result = new StringBuilder();
    for (int i = 0; i < roles.length; i++) {
        result.append(roles[i] + ":" + '\n');
        for (int j = 0; j < textLines.length; j++) {
            if (textLines[j].startsWith(roles[i] + ":")) {
                result.append((textLines[j].replaceFirst(roles[i] + ":", j + 1 + ")")) + "\n");
            }
            result.append('\n');
        }
    }
    return result.toString();
}*/
}

/*
    private String printTextPerRole(String[] roles, String[] textLines) {
        StringBuilder res = new StringBuilder();                  // Создание результирующей строки в StringBuilder
        for (int i = 0; i < roles.length; i++) {                  // Прохождение по массиву roles[]
            String rol = roles[i] + ":";                          // Перевод эл-та массива roles[] в строку и добавление ":"
            res.append(rol + "\n");                               // Добавление в строку переведенного эл-та массива и перевод строки
            for (int j = 0; j < textLines.length; j++) {          // Прохождение по массиву textLines[]
                String text = textLines[j];                       // Перевод эл-та массива textLiness[] в строку
                if(text.startsWith(rol)) {                        // Цикл для проверки начала строки с текстом и ролью:
                    StringBuilder text1 = new StringBuilder(text);// Перевод текста из String в StringBuilder для форматирования
                    text1.delete(0, roles[i].length() + 2);       // Удаление симоволов в начале строки с текстом роли
                    text1.toString();                             // Перевод из StringBuilder обратно в String
                    res.append((j + 1) + ") " + text1 + "\n");    // Добавление в строку индекса текста, скобки с пробелом и
                }                                                 // текста роли, переводя все на новую строку
            }
            res.append("\n");                                     // Перевод строки, для отступа между ролями
        }
        String res1 = res.toString();                                 // Перевод результата из StringBuilder обратно в String
        return res1;                                                  // Возвращение результата из метода типа String
    }

*/

//---------------------------------------------------------------------
/*Урок с кодом
Вам дан список ролей и сценарий пьесы в виде массива строчек. Каждая строчка
сценария пьесы дана в следующем виде:
Роль: текст
Текст может содержать любые символы.
Напишите метод, который будет группировать строчки по ролям, пронумеровывать
 их и возвращать результат в виде готового текста (см. пример). Каждая группа
 распечатывается в следующем виде:

Роль:
i) текст
j) текст2
...
==перевод строки==

i и j -- номера строк в сценарии. Индексация строчек начинается с единицы,
выводить группы следует в соответствии с порядком ролей. Переводы строк между
группами обязательны, переводы строк в конце текста не учитываются.

Заметим, что вам предстоит обработка огромной пьесы в 50 000 строк для 10
ролей – соответственно, неправильная сборка результирующей строчки может выйти
за ограничение по времени.

Обратите внимание еще на несколько нюансов:
имя персонажа может встречаться в строке более одного раза, в том числе с двоеточием;
название одной роли может быть префиксом названия другой роли (например, "Лука" и "Лука Лукич");
роль, у которой нет реплик, тоже должна присутствовать в выходном файле;
в качестве перевода строки надо использовать символ '\n' (перевод строки в стиле UNIX);
будьте внимательны, не добавляйте лишних пробелов в конце строк.

Пример ввода 1:
roles:
Городничий
Аммос Федорович
Артемий Филиппович
Лука Лукич

textLines:
Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
Аммос Федорович: Как ревизор?
Артемий Филиппович: Как ревизор?
Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.
Аммос Федорович: Вот те на!
Артемий Филиппович: Вот не было заботы, так подай!
Лука Лукич: Господи боже! еще и с секретным предписаньем!

Пример вывода 1:
Городничий:
1) Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
4) Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.

Аммос Федорович:
2) Как ревизор?
5) Вот те на!

Артемий Филиппович:
3) Как ревизор?
6) Вот не было заботы, так подай!

Лука Лукич:
7) Господи боже! еще и с секретным предписаньем!


Требования:
1. Метод должен быть публичным.
2. Метод должен принимать на вход два массива строк.
3. Метод должен возвращать строку.
4. Результативная строка должна соответствовать уcловию.
5. Необходимо использовать StringBuilder*/